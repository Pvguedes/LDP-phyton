graph = {
    '1': ['2', '3'],
    '2': ['6', '12', '1'],
    '3': ['4', '1'],
    '4': ['3', '19'],
    '5': ['2', '6', '13'],
    '6': ['2', '5', '7'],
    '7': ['6', '8', '9'],
    '8': ['7', '9', '10', '11'],
    '9': ['6', '8', '10'],
    '10': ['8', '9', '11', '14'],
    '11': ['8', '10'],
    '12': ['2', '13', '14', '16'],
    '13': ['5', '12', '14'],
    '14': ['10', '12', '13', '15'],
    '15': ['14', '16'],
    '16': ['12', '15', '17', '19'],
    '17': ['16', '18'],
    '18': ['17', '19'],
    '19': ['4', '16', '18']
}

visited = set()


def dfs(graph, node, count):
  if node not in visited:
    if count > 1:
      print(" -> ", end="")
    print(node, end="")
    visited.add(node)
    count += 1
    for neighbor in graph[node]:
      count = dfs(graph, neighbor, count)
  return count


print("caminho do mapa BR come√ßando do 5:")
dfs(graph, '5', 1)
